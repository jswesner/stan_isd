posterior_isd_sims = recover_sims %>%
filter(true_lambda == -1.8)
recover_sims %>%
filter(true_lambda == -1.8)
#unique true lambdas to choose from for an example
unique_lambdas = recover_sims %>% distinct(true_lambda)
unique_lambdas
View(unique_lambdas)
#unique true lambdas to choose from for an example
unique_lambdas = unique(recover_sims$true_lambda)
#unique true lambdas to choose from for an example
unique_lambdas = unique(round(recover_sims$true_lambda), 2)
#unique true lambdas to choose from for an example
unique_lambdas = unique(round(recover_sims$true_lambda), 3)
#unique true lambdas to choose from for an example
unique_lambdas = unique(recover_sims$true_lambda)
posterior_isd_sims = recover_sims %>%
filter(true_lambda >= -1.6 & true_lambda <= -1.49)
posterior_isd_sims = recover_sims %>%
filter(true_lambda >= -1.6 & true_lambda <= -1.49) %>%
mutate(draw = 1:nrow(.)) %>%
filter(draw <= 200) %>%
expand_grid(xmin = xmin,
xmax = xmax,
nsamples = 1:nsamples) %>%
group_by(lambda) %>%
mutate(x.PLB = row_number()) %>%
ungroup %>%
mutate(y.PLB = (1 - (x.PLB^(lambda + 1) - (xmin^(lambda+1)))/(xmax^(lambda + 1) - (xmin^(lambda+1)))),
model = "posterior")
posterior_isd_sims
posterior_isd_sims = recover_sims %>%
filter(true_lambda >= -1.6 & true_lambda <= -1.49) %>%
mutate(draw = 1:nrow(.)) %>%
filter(draw <= 200) %>%
expand_grid(xmin = xmin,
xmax = xmax,
nsamples = 1:nsamples) %>%
group_by(lambda) %>%
mutate(x.PLB = row_number()) %>%
ungroup %>%
mutate(y.PLB = (1 - (x.PLB^(lambda + 1) - (xmin^(lambda+1)))/(xmax^(lambda + 1) - (xmin^(lambda+1)))),
model = "posterior")
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
bind_rows(prior_isd_sims, posterior_isd_sims)
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
ggplot(aes(x = x.PLB, y = y.PLB, group = lambda)) +
geom_line(alpha = 0.1) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10()
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
ggplot(aes(x = x.PLB, y = y.PLB, group = lambda)) +
geom_line(alpha = 0.1) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA))
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
mutate(model = as.factor(model),
model = fct_relevel(model, "prior")) +
ggplot(aes(x = x.PLB, y = y.PLB, group = lambda)) +
geom_line(alpha = 0.1) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA))
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
mutate(model = as.factor(model),
model = fct_relevel(model, "prior")) %>%
ggplot(aes(x = x.PLB, y = y.PLB, group = lambda)) +
geom_line(alpha = 0.1) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA))
posterior_isd_sims
posterior_isd_sims %>%
summarize(mean = mean(lambda),
sd = sd(lambda))
posterior_summary = posterior_isd_sims %>%
summarize(mean = mean(lambda),
sd = sd(lambda))
posterior_summary = posterior_isd_sims %>%
group_by(model) %>%
summarize(mean = mean(lambda),
sd = sd(lambda))
posterior_isd_sims %>%
group_by(model) %>%
summarize(mean = mean(lambda),
sd = sd(lambda))
posterior_summary = posterior_isd_sims %>%
group_by(model) %>%
summarize(mean = mean(lambda),
sd = sd(lambda)) %>%
add_row(c("prior", -1.75, 0.2))
?add_row()
posterior_summary = posterior_isd_sims %>%
group_by(model) %>%
summarize(mean = mean(lambda),
sd = sd(lambda)) %>%
add_row(model = "prior", mean = -1.75, sd = 0.2)
lambda_prior = rnorm(200, lambda_mean, lambda_sd)
lambda_mean = -1.75
lambda_sd = 0.2
lambda_prior = rnorm(200, lambda_mean, lambda_sd)
posterior_summary = posterior_isd_sims %>%
group_by(model) %>%
summarize(mean = mean(lambda),
sd = sd(lambda)) %>%
add_row(model = "prior", mean = lambda_mean, sd = lambda_sd)
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
mutate(model = as.factor(model),
model = fct_relevel(model, "prior")) %>%
ggplot(aes(x = x.PLB, y = y.PLB, group = lambda)) +
geom_line(alpha = 0.1) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default()
posterior_summary
posterior_isd_sims %>%
group_by(model) %>%
summarize(mean = mean(lambda),
sd = round(sd(lambda), 2) %>%
add_row(model = "prior", mean = lambda_mean, sd = lambda_sd)
posterior_isd_sims %>%
group_by(model) %>%
summarize(mean = mean(lambda),
sd = round(sd(lambda), 2)) %>%
add_row(model = "prior", mean = lambda_mean, sd = lambda_sd)
posterior_summary = posterior_isd_sims %>%
group_by(model) %>%
summarize(mean = mean(lambda),
sd = round(sd(lambda), 2)) %>%
add_row(model = "prior", mean = lambda_mean, sd = lambda_sd) %>%
mutate(text = paste0(mean, "\u00b1", sd))
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
mutate(model = as.factor(model),
model = fct_relevel(model, "prior")) %>%
ggplot(aes(x = x.PLB, y = y.PLB, group = lambda)) +
geom_line(alpha = 0.1) +
geom_text(data = posterior_summary, aes(x = 10, y = 0.7, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default()
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
mutate(model = as.factor(model),
model = fct_relevel(model, "prior")) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, aes(x = 10, y = 0.7, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default()
posterior_summary = posterior_isd_sims %>%
group_by(model) %>%
summarize(mean = round(mean(lambda), 2),
sd = round(sd(lambda), 2)) %>%
add_row(model = "prior", mean = lambda_mean, sd = lambda_sd) %>%
mutate(text = paste0(mean, " \u00b1 ", sd))
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
mutate(model = as.factor(model),
model = fct_relevel(model, "prior")) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, aes(x = 10, y = 0.3, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default()
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
mutate(model = as.factor(model),
model = fct_relevel(model, "prior")) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, aes(x = 10, y = 0.01, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default()
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
mutate(model = as.factor(model),
model = fct_relevel(model, "prior")) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default()
posterior_summary = posterior_isd_sims %>%
group_by(model) %>%
summarize(mean = round(mean(lambda), 2),
sd = round(sd(lambda), 2)) %>%
add_row(model = "prior", mean = lambda_mean, sd = lambda_sd) %>%
mutate(text = paste0("\u03bb = ", mean, " \u00b1 ", sd))
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
mutate(model = as.factor(model),
model = fct_relevel(model, "prior")) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default()
posterior_isd_sims = recover_sims %>%
filter(true_lambda >= -1.6 & true_lambda <= -1.49) %>%
mutate(draw = 1:nrow(.)) %>%
filter(draw <= 200) %>%
expand_grid(xmin = xmin,
xmax = xmax,
nsamples = 1:nsamples) %>%
group_by(lambda) %>%
mutate(x.PLB = row_number()) %>%
ungroup %>%
mutate(y.PLB = (1 - (x.PLB^(lambda + 1) - (xmin^(lambda+1)))/(xmax^(lambda + 1) - (xmin^(lambda+1)))),
model = "b) Posterior")
posterior_summary = posterior_isd_sims %>%
group_by(model) %>%
summarize(mean = round(mean(lambda), 2),
sd = round(sd(lambda), 2)) %>%
add_row(model = "a) Prior", mean = lambda_mean, sd = lambda_sd) %>%
mutate(text = paste0("\u03bb = ", mean, " \u00b1 ", sd))
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
mutate(model = as.factor(model),
model = fct_relevel(model, "prior")) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default() +
theme(strip.text = element_text(hjust = 0))
prior_isd_sims = tibble(lambda = lambda_prior) %>%
expand_grid(xmin = xmin,
xmax = xmax,
nsamples = 1:nsamples) %>%
group_by(lambda) %>%
mutate(x.PLB = row_number()) %>%
ungroup %>%
mutate(y.PLB = (1 - (x.PLB^(lambda + 1) - (xmin^(lambda+1)))/(xmax^(lambda + 1) - (xmin^(lambda+1)))),
model = "a) Prior")
prior_isd_sims %>%
ggplot(aes(x = x.PLB, y = y.PLB, group = lambda)) +
geom_line(alpha = 0.1) +
scale_x_log10() +
scale_y_log10()
prior_isd_sims %>%
ggplot(aes(x = x.PLB, y = y.PLB, group = lambda)) +
geom_line(alpha = 0.1) +
scale_x_log10() +
scale_y_log10()
# prior vs posterior -------------------------------------------------------
recover_sims = readRDS(file = "posteriors/recover_sims_counts.rds")
#unique true lambdas to choose from for an example
unique_lambdas = unique(recover_sims$true_lambda)
posterior_isd_sims = recover_sims %>%
filter(true_lambda >= -1.6 & true_lambda <= -1.49) %>%
mutate(draw = 1:nrow(.)) %>%
filter(draw <= 200) %>%
expand_grid(xmin = xmin,
xmax = xmax,
nsamples = 1:nsamples) %>%
group_by(lambda) %>%
mutate(x.PLB = row_number()) %>%
ungroup %>%
mutate(y.PLB = (1 - (x.PLB^(lambda + 1) - (xmin^(lambda+1)))/(xmax^(lambda + 1) - (xmin^(lambda+1)))),
model = "b) Posterior")
posterior_summary = posterior_isd_sims %>%
group_by(model) %>%
summarize(mean = round(mean(lambda), 2),
sd = round(sd(lambda), 2)) %>%
add_row(model = "a) Prior", mean = lambda_mean, sd = lambda_sd) %>%
mutate(text = paste0("\u03bb = ", mean, " \u00b1 ", sd))
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
mutate(model = as.factor(model),
model = fct_relevel(model, "prior")) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default() +
theme(strip.text = element_text(hjust = 0))
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default() +
theme(strip.text = element_text(hjust = 0))
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default() +
theme(strip.text = element_text(hjust = 0),
size = 2)
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default() +
theme(strip.text = element_text(hjust = 0),
size = 2)
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, size = 2, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default() +
theme(strip.text = element_text(hjust = 0))
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, size = 3, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default() +
theme(strip.text = element_text(hjust = 0))
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, size = 4, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default() +
theme(strip.text = element_text(hjust = 0))
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, size = 3, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default() +
theme(strip.text = element_text(hjust = 0))
bind_rows(prior_isd_sims, posterior_isd_sims) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, size = 3, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default() +
theme(strip.text = element_text(hjust = 0)) +
labs(y = "Proportion of values \u2265 x",
x = "Individual dry mass (mg)")
prior_post_plot = bind_rows(prior_isd_sims, posterior_isd_sims) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(alpha = 0.1, aes(group = lambda)) +
geom_text(data = posterior_summary, size = 3, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default() +
theme(strip.text = element_text(hjust = 0)) +
labs(y = "Proportion of values \u2265 x",
x = "Individual dry mass (mg)")
ggview::ggview(prior_post_plot, width = 5, height = 2)
ggview::ggview(prior_post_plot, width = 5, height = 3)
ggview::ggview(prior_post_plot, width = 6, height = 3)
ggsave(prior_post_plot, width = 6, height = 3, units = "in", dpi = 600)
lambda_prior = rnorm(30, lambda_mean, lambda_sd)
prior_isd_sims = tibble(lambda = lambda_prior) %>%
expand_grid(xmin = xmin,
xmax = xmax,
nsamples = 1:nsamples) %>%
group_by(lambda) %>%
mutate(x.PLB = row_number()) %>%
ungroup %>%
mutate(y.PLB = (1 - (x.PLB^(lambda + 1) - (xmin^(lambda+1)))/(xmax^(lambda + 1) - (xmin^(lambda+1)))),
model = "a) Prior")
prior_isd_sims %>%
ggplot(aes(x = x.PLB, y = y.PLB, group = lambda)) +
geom_line(alpha = 0.1) +
scale_x_log10() +
scale_y_log10()
# prior vs posterior -------------------------------------------------------
recover_sims = readRDS(file = "posteriors/recover_sims_counts.rds")
#unique true lambdas to choose from for an example
unique_lambdas = unique(recover_sims$true_lambda)
posterior_isd_sims = recover_sims %>%
filter(true_lambda >= -1.6 & true_lambda <= -1.49) %>%
mutate(draw = 1:nrow(.)) %>%
filter(draw <= 30) %>%
expand_grid(xmin = xmin,
xmax = xmax,
nsamples = 1:nsamples) %>%
group_by(lambda) %>%
mutate(x.PLB = row_number()) %>%
ungroup %>%
mutate(y.PLB = (1 - (x.PLB^(lambda + 1) - (xmin^(lambda+1)))/(xmax^(lambda + 1) - (xmin^(lambda+1)))),
model = "b) Posterior")
posterior_summary = posterior_isd_sims %>%
group_by(model) %>%
summarize(mean = round(mean(lambda), 2),
sd = round(sd(lambda), 2)) %>%
add_row(model = "a) Prior", mean = lambda_mean, sd = lambda_sd) %>%
mutate(text = paste0("\u03bb = ", mean, " \u00b1 ", sd))
prior_post_plot = bind_rows(prior_isd_sims, posterior_isd_sims) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(aes(group = lambda)) +
geom_text(data = posterior_summary, size = 3, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default() +
theme(strip.text = element_text(hjust = 0)) +
labs(y = "Proportion of values \u2265 x",
x = "Individual dry mass (mg)")
ggview::ggview(prior_post_plot, width = 6, height = 3)
ggsave(prior_post_plot, width = 6, height = 3, units = "in", dpi = 600,
file = "plots/prior_post_plot.jpg")
saveRDS(prior_post_plot, file = "plots/prior_post_plot.rds")
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(brms)
library(rstan)
library(stringi)
library(here)
bayes_mle_regression_plot = readRDS(file = here("plots/bayes_mle_regression_plot.rds"))
bayes_mle_regression_plot
library(here)
bayes_mle_regression_plot = readRDS(file = here("plots/bayes_mle_regression_plot.rds"))
bayes_mle_regression_plot
prior_post_plot = readRDS(file = here("plots/prior_post_plot.rds"))
library(here)
prior_post_plot = readRDS(file = here("plots/prior_post_plot.rds"))
prior_post_plot
posterior_summary
posterior_summary = posterior_isd_sims %>%
group_by(model) %>%
summarize(mean = round(mean(lambda), 2),
sd = round(sd(lambda), 2)) %>%
add_row(model = "a) Prior", mean = lambda_mean, sd = lambda_sd) %>%
mutate(text = paste0(model, ": \u03bb = ", mean, " \u00b1 ", sd))
posterior_summary
posterior_summary
bind_rows(prior_isd_sims, posterior_isd_sims)
prior_post_plot = bind_rows(prior_isd_sims, posterior_isd_sims) %>%
left_join(posterior_summary) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(aes(group = lambda)) +
geom_text(data = posterior_summary, size = 3, aes(x = 50, y = 1, label = text)) +
facet_wrap(~model) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default() +
theme(strip.text = element_text(hjust = 0)) +
labs(y = "Proportion of values \u2265 x",
x = "Individual dry mass (mg)")
ggview::ggview(prior_post_plot, width = 6, height = 3)
prior_post_plot = bind_rows(prior_isd_sims, posterior_isd_sims) %>%
left_join(posterior_summary) %>%
ggplot(aes(x = x.PLB, y = y.PLB)) +
geom_line(aes(group = lambda)) +
# geom_text(data = posterior_summary, size = 3, aes(x = 50, y = 1, label = text)) +
facet_wrap(~text) +
scale_x_log10() +
scale_y_log10() +
coord_cartesian(ylim = c(1e-05, NA)) +
theme_default() +
theme(strip.text = element_text(hjust = 0)) +
labs(y = "Proportion of values \u2265 x",
x = "Individual dry mass (mg)")
ggview::ggview(prior_post_plot, width = 6, height = 3)
ggsave(prior_post_plot, width = 6, height = 3, units = "in", dpi = 600,
file = "plots/prior_post_plot.jpg")
saveRDS(prior_post_plot, file = "plots/prior_post_plot.rds")
