mutate(x = case_when(true_value == -1.6 ~ 0.3 + orders_mag,
TRUE ~ orders_mag - 0.25))
xmax_coverage = xmax_lambdas %>%
group_by(true_value, orders_mag) %>%
add_tally() %>%
reframe(cov = sum(cov95 == "yes"),
n = n) %>%
distinct(true_value, n, cov, orders_mag) %>%
mutate(cov = round(cov/n, 2)) %>%
mutate(x = case_when(true_value == -1.6 ~ 0.25 + orders_mag,
TRUE ~ orders_mag - 0.25))
#2) make plot
range_of_sizes = xmax_lambdas %>%
# filter(replicate <= 1000) %>%
ggplot(aes(x = orders_mag, y = mean)) +
geom_point(shape = 21, size = 0.01,
aes(group = true_value, color = cov95), position = position_jitterdodge(dodge.width = 0.2, jitter.width = 0.03)) +
# facet_wrap(. ~ true_value, ncol = 1) +
labs(y = "\u03bb",
x = "Range of body sizes\n(orders of magnitude)",
color = "95% CrI contains true value?",
subtitle = "b) Size Range") +
scale_color_colorblind() +
theme_default() +
geom_hline(data = . %>% ungroup %>% distinct(xmin, true_value), aes(yintercept = true_value)) +
theme(strip.text.y = element_blank(),
legend.position = "top") +
guides(color = guide_legend(override.aes = list(size=3))) +
geom_text(data = xmax_coverage, aes(y = true_value + 0.02, label = cov, x = x),
size = 2)
#3) save plot
ggview::ggview(range_of_sizes, width = 5, height = 6)
save_plot_and_data(range_of_sizes, file_name = "plots/fig2b_range_of_sizes", width = 5, height = 6, dpi = 500)
# Combine plots -----------------------------------------------------------
sample_size_plot = readRDS(file = "plots/fig2a_sample_size_plot.rds")
range_of_sizes = readRDS(file = "plots/fig2b_range_of_sizes.rds")
library(patchwork)
sample_size_range = sample_size_plot + ylim(-3, -1.2) + guides(color = "none") + range_of_sizes + ylim(-3, -1.2) + guides(color = "none")
ggview::ggview(sample_size_range, width = 6.5, height = 4)
sample_size_plot = sample_size_summary %>%
ggplot(aes(x = n_sim, y = b_Intercept)) +
geom_point(shape = 21, size = 0.01,
aes(group = true_value, color = as.character(cov95)), position = position_jitterdodge(dodge.width = 0.2, jitter.width = 0.02)) +
scale_x_log10() +
scale_color_colorblind() +
labs(y = "\u03bb",
x = "Sample size",
color = "95% CrI contains true value?",
subtitle = "a) Sample Size") +
theme_default() +
geom_hline(data = . %>% ungroup %>% distinct(n_sim, true_value), aes(yintercept = true_value)) +
theme(strip.text.y = element_blank(),
legend.position = "top") +
guides(color = "none") +
geom_text(data = sample_size_coverage, aes(y = true_value + 0.02, label = cov, x = x),
size = 2)
#3) save plot
ggview::ggview(sample_size_plot, width = 5, height = 6)
save_plot_and_data(sample_size_plot, file_name = "plots/fig2a_sample_size_plot", width = 5, height = 6, dpi = 500)
# Combine plots -----------------------------------------------------------
sample_size_plot = readRDS(file = "plots/fig2a_sample_size_plot.rds")
range_of_sizes = readRDS(file = "plots/fig2b_range_of_sizes.rds")
library(patchwork)
sample_size_range = sample_size_plot + ylim(-3, -1.2) + guides(color = "none") + range_of_sizes + ylim(-3, -1.2) + guides(color = "none")
ggview::ggview(sample_size_range, width = 6.5, height = 4)
sample_size_plot = sample_size_summary %>%
ggplot(aes(x = n_sim, y = b_Intercept)) +
geom_point(shape = 21, size = 0.01,
aes(group = true_value, color = as.character(cov95)), position = position_jitterdodge(dodge.width = 0.2, jitter.width = 0.01)) +
scale_x_log10() +
scale_color_colorblind() +
labs(y = "\u03bb",
x = "Sample size",
color = "95% CrI contains true value?",
subtitle = "a) Sample Size") +
theme_default() +
geom_hline(data = . %>% ungroup %>% distinct(n_sim, true_value), aes(yintercept = true_value)) +
theme(strip.text.y = element_blank(),
legend.position = "top") +
guides(color = "none") +
geom_text(data = sample_size_coverage, aes(y = true_value + 0.02, label = cov, x = x),
size = 2)
#3) save plot
ggview::ggview(sample_size_plot, width = 5, height = 6)
save_plot_and_data(sample_size_plot, file_name = "plots/fig2a_sample_size_plot", width = 5, height = 6, dpi = 500)
# Combine plots -----------------------------------------------------------
sample_size_plot = readRDS(file = "plots/fig2a_sample_size_plot.rds")
range_of_sizes = readRDS(file = "plots/fig2b_range_of_sizes.rds")
library(patchwork)
sample_size_range = sample_size_plot + ylim(-3, -1.2) + guides(color = "none") + range_of_sizes + ylim(-3, -1.2) + guides(color = "none")
ggview::ggview(sample_size_range, width = 6.5, height = 4)
sample_size_coverage = sample_size_summary %>%
group_by(n_sim, true_value) %>%
reframe(cov = round(sum(cov95)/1000,2)) %>%
mutate(x = case_when(true_value == -1.6 ~ n_sim + 0.4*n_sim,
TRUE ~ n_sim - 0.25*n_sim))
sample_size_plot = sample_size_summary %>%
ggplot(aes(x = n_sim, y = b_Intercept)) +
geom_point(shape = 21, size = 0.01,
aes(group = true_value, color = as.character(cov95)), position = position_jitterdodge(dodge.width = 0.2, jitter.width = 0.01)) +
scale_x_log10() +
scale_color_colorblind() +
labs(y = "\u03bb",
x = "Sample size",
color = "95% CrI contains true value?",
subtitle = "a) Sample Size") +
theme_default() +
geom_hline(data = . %>% ungroup %>% distinct(n_sim, true_value), aes(yintercept = true_value)) +
theme(strip.text.y = element_blank(),
legend.position = "top") +
guides(color = "none") +
geom_text(data = sample_size_coverage, aes(y = true_value + 0.02, label = cov, x = x),
size = 2)
#3) save plot
ggview::ggview(sample_size_plot, width = 5, height = 6)
save_plot_and_data(sample_size_plot, file_name = "plots/fig2a_sample_size_plot", width = 5, height = 6, dpi = 500)
# Combine plots -----------------------------------------------------------
sample_size_plot = readRDS(file = "plots/fig2a_sample_size_plot.rds")
range_of_sizes = readRDS(file = "plots/fig2b_range_of_sizes.rds")
library(patchwork)
sample_size_range = sample_size_plot + ylim(-3, -1.2) + guides(color = "none") + range_of_sizes + ylim(-3, -1.2) + guides(color = "none")
ggview::ggview(sample_size_range, width = 6.5, height = 4)
xmax_coverage = xmax_lambdas %>%
group_by(true_value, orders_mag) %>%
add_tally() %>%
reframe(cov = sum(cov95 == "yes"),
n = n) %>%
distinct(true_value, n, cov, orders_mag) %>%
mutate(cov = round(cov/n, 2)) %>%
mutate(x = case_when(true_value == -1.6 ~ 0.29 + orders_mag,
TRUE ~ orders_mag - 0.28))
#2) make plot
range_of_sizes = xmax_lambdas %>%
# filter(replicate <= 1000) %>%
ggplot(aes(x = orders_mag, y = mean)) +
geom_point(shape = 21, size = 0.01,
aes(group = true_value, color = cov95), position = position_jitterdodge(dodge.width = 0.2, jitter.width = 0.03)) +
# facet_wrap(. ~ true_value, ncol = 1) +
labs(y = "\u03bb",
x = "Range of body sizes\n(orders of magnitude)",
color = "95% CrI contains true value?",
subtitle = "b) Size Range") +
scale_color_colorblind() +
theme_default() +
geom_hline(data = . %>% ungroup %>% distinct(xmin, true_value), aes(yintercept = true_value)) +
theme(strip.text.y = element_blank(),
legend.position = "top") +
guides(color = guide_legend(override.aes = list(size=3))) +
geom_text(data = xmax_coverage, aes(y = true_value + 0.02, label = cov, x = x),
size = 2)
#3) save plot
ggview::ggview(range_of_sizes, width = 5, height = 6)
save_plot_and_data(range_of_sizes, file_name = "plots/fig2b_range_of_sizes", width = 5, height = 6, dpi = 500)
# Combine plots -----------------------------------------------------------
sample_size_plot = readRDS(file = "plots/fig2a_sample_size_plot.rds")
range_of_sizes = readRDS(file = "plots/fig2b_range_of_sizes.rds")
library(patchwork)
sample_size_range = sample_size_plot + ylim(-3, -1.2) + guides(color = "none") + range_of_sizes + ylim(-3, -1.2) + guides(color = "none")
ggview::ggview(sample_size_range, width = 6.5, height = 4)
#2) make plot
range_of_sizes = xmax_lambdas %>%
# filter(replicate <= 1000) %>%
ggplot(aes(x = orders_mag, y = mean)) +
geom_point(shape = 21, size = 0.01,
aes(group = true_value, color = cov95), position = position_jitterdodge(dodge.width = 0.2, jitter.width = 0.03)) +
# facet_wrap(. ~ true_value, ncol = 1) +
labs(y = "\u03bb",
x = "Range of body sizes\n(orders of magnitude)",
color = "95% CrI contains true value?",
subtitle = "b) Size Range") +
scale_color_colorblind() +
theme_default() +
geom_hline(data = . %>% ungroup %>% distinct(xmin, true_value), aes(yintercept = true_value)) +
theme(strip.text.y = element_blank(),
legend.position = "top") +
guides(color = guide_legend(override.aes = list(size=3))) +
geom_text(data = xmax_coverage, aes(y = true_value + 0.03, label = cov, x = x),
size = 2)
#3) save plot
ggview::ggview(range_of_sizes, width = 5, height = 6)
save_plot_and_data(range_of_sizes, file_name = "plots/fig2b_range_of_sizes", width = 5, height = 6, dpi = 500)
# Sample size -------------------------------------------------------------
#1) load sample size posteriors
sample_size_posts_df = readRDS(file = "posteriors/sample_size_posts_df.rds")
#2) Summarize coverage
true_value = rep(rep(c(-2, -1.6), each = 4), 1000) # did this by hand - double check
sample_size_summary = sample_size_posts_df %>%
rename(n_sim = n) %>%
mutate(true_value = true_value) %>%
mutate(cov95 = case_when(true_value <= .upper &
true_value >= .lower ~ 1,
TRUE ~0))
sample_size_coverage = sample_size_summary %>%
group_by(n_sim, true_value) %>%
reframe(cov = round(sum(cov95)/1000,2)) %>%
mutate(x = case_when(true_value == -1.6 ~ n_sim + 0.4*n_sim,
TRUE ~ n_sim - 0.25*n_sim))
sample_size_plot = sample_size_summary %>%
ggplot(aes(x = n_sim, y = b_Intercept)) +
geom_point(shape = 21, size = 0.01,
aes(group = true_value, color = as.character(cov95)), position = position_jitterdodge(dodge.width = 0.2, jitter.width = 0.01)) +
scale_x_log10() +
scale_color_colorblind() +
labs(y = "\u03bb",
x = "Sample size",
color = "95% CrI contains true value?",
subtitle = "a) Sample Size") +
theme_default() +
geom_hline(data = . %>% ungroup %>% distinct(n_sim, true_value), aes(yintercept = true_value)) +
theme(strip.text.y = element_blank(),
legend.position = "top") +
guides(color = "none") +
geom_text(data = sample_size_coverage, aes(y = true_value + 0.03, label = cov, x = x),
size = 2)
#3) save plot
ggview::ggview(sample_size_plot, width = 5, height = 6)
save_plot_and_data(sample_size_plot, file_name = "plots/fig2a_sample_size_plot", width = 5, height = 6, dpi = 500)
# Combine plots -----------------------------------------------------------
sample_size_plot = readRDS(file = "plots/fig2a_sample_size_plot.rds")
range_of_sizes = readRDS(file = "plots/fig2b_range_of_sizes.rds")
library(patchwork)
sample_size_range = sample_size_plot + ylim(-3, -1.2) + guides(color = "none") + range_of_sizes + ylim(-3, -1.2) + guides(color = "none")
ggview::ggview(sample_size_range, width = 6.5, height = 4)
save_plot_and_data(sample_size_range, file_name = "ms/fig2range_of_sizes", width = 6.5, height = 4, dpi = 500)
library(tidyverse)
library(rstan)
source("code/sandbox/save_plot_and_data.R") # custom function that saves image files with ggsave and also makes an .rds copy of that file.
#1) Get fitted models
reg_update = readRDS("models/coverage_models/reg_fits_fixed.rds")
#2) Extract mean and CrI from fitted models
reg_summaries = NULL
for(i in 1:ncol(reg_update)){
reg_summaries[[i]] = as_draws_df(reg_update[,i]$fit) %>%
pivot_longer(starts_with("b_")) %>%
group_by(name) %>%
tidybayes::median_qi(value) %>%
mutate(replicate = i)
}
#3) Get true values to append
true_values = tibble(b_Intercept = -1.2,
b_predictor = -0.05) %>%
pivot_longer(cols = everything(), names_to = "name", values_to = "true_values") %>%
mutate(name_greek = case_when(name == "b_Intercept" ~ paste0("a) ","\u03b1"),
TRUE ~ paste0("b) ","\u03b2")))
#4) Append true values. Calculate coverage
reg_coverage = bind_rows(reg_summaries) %>%
left_join(true_values) %>%
mutate(contains = case_when(true_values >= .lower & true_values <= .upper ~ 1,
TRUE ~ 0))
#5) Make plot
reg_coverage_plot = reg_coverage %>%
# filter(replicate <= 100) %>%
ggplot(aes(x = replicate, y = value, color = as.factor(contains),
shape = as.factor(contains))) +
geom_linerange(aes(ymin = .lower, ymax = .upper), linewidth = 0.32) +
facet_wrap(~name_greek, scales = "free", ncol = 1) +
geom_hline(data = . %>% distinct(name_greek, true_values),
aes(yintercept = true_values)) +
scale_color_colorblind() +
theme_default() +
labs(y = "Parameter values",
x = "Simulation") +
guides(color = "none") +
theme(strip.text = element_text(hjust = 0))
#6) Save plot
ggview::ggview(reg_coverage_plot, height = 6.5, width = 6.5)
save_plot_and_data(reg_coverage_plot, file_name = "plots/reg_coverage_plot",  height = 6.5, width = 6.5)
library(tidyverse)
library(tidybayes)
library(brms)
library(ggthemes)
source("code/sandbox/save_plot_and_data.R")
#1) read in model summaries
separate_lambda_summaries = readRDS(file = "models/coverage_models/all_lambda_summaries.rds") %>%
mutate(model = "separate_models", pars = "lambda") %>% rename(true_value = true_lambda)
var_lambda_summaries = readRDS("posteriors/var_summaries.rds") %>% mutate(pars = "lambda", model = "varying_intercepts")
fixed_lambda_summaries = readRDS("posteriors/fixed_summaries.rds") %>% mutate(pars = "lambda")
all_lambda_summaries = bind_rows(separate_lambda_summaries,
var_lambda_summaries,
fixed_lambda_summaries)
#2) wrangle model summaries
plot_data = all_lambda_summaries %>%
filter(xmax == 1000) %>% # limit to xmax = 1000
mutate(cov95 = case_when(true_value > `2.5%` & true_value <`97.5%` ~ "yes", TRUE ~ "no"),
cov50 = case_when(true_value > `25%` & true_value <`75%` ~ "yes", TRUE ~ "no"),
cov99 = case_when(true_value > `0.5%` & true_value <`99.5%` ~ "yes", TRUE ~ "no")) %>%
group_by(xmax, model, pars, true_value) %>%
# filter(replicate <= 100) %>%
mutate(model = case_when(model == "separate_models" ~ "a) Separate Models",
model == "fixed_predictors" ~ "b) Fixed Predictor",
TRUE ~ "c) Varying Intercepts"))
#3) plot model summaries
coverage_plot = plot_data %>%
ggplot(aes(x = replicate, y = mean, ymin = `2.5%`, ymax = `97.5%`,
color = as.factor(cov95))) +
geom_linerange(linewidth = 0.3) +
facet_grid(true_value ~ model) +
labs(y = "\u03bb",
x = "Simulation",
color = "CrI contains true value?") +
ggthemes::scale_color_colorblind() +
theme_default() +
geom_hline(data = plot_data %>% ungroup %>% distinct(model, cov95, true_value),
aes(yintercept = true_value)) +
theme(strip.text.y = element_blank(),
legend.position = "top")
ggview::ggview(coverage_plot, width = 6, height = 9)
save_plot_and_data(coverage_plot, file_name = "plots/coverage_plot", width = 6, height = 9)
ggview::ggview(coverage_plot, width = 6, height = 7)
save_plot_and_data(coverage_plot, file_name = "plots/coverage_plot", width = 6, height = 7)
#5) Make plot
reg_coverage_plot = reg_coverage %>%
# filter(replicate <= 100) %>%
ggplot(aes(x = replicate, y = value, color = as.factor(contains),
shape = as.factor(contains))) +
geom_linerange(aes(ymin = .lower, ymax = .upper), linewidth = 0.62) +
facet_wrap(~name_greek, scales = "free", ncol = 1) +
geom_hline(data = . %>% distinct(name_greek, true_values),
aes(yintercept = true_values)) +
scale_color_colorblind() +
theme_default() +
labs(y = "Parameter values",
x = "Simulation") +
guides(color = "none") +
theme(strip.text = element_text(hjust = 0))
#6) Save plot
ggview::ggview(reg_coverage_plot, height = 6.5, width = 6.5)
save_plot_and_data(reg_coverage_plot, file_name = "plots/reg_coverage_plot",  height = 6.5, width = 6.5)
#5) Make plot
reg_coverage_plot = reg_coverage %>%
# filter(replicate <= 100) %>%
ggplot(aes(x = replicate, y = value, color = as.factor(-contains),
shape = as.factor(contains))) +
geom_linerange(aes(ymin = .lower, ymax = .upper), linewidth = 0.62) +
facet_wrap(~name_greek, scales = "free", ncol = 1) +
geom_hline(data = . %>% distinct(name_greek, true_values),
aes(yintercept = true_values)) +
scale_color_colorblind() +
theme_default() +
labs(y = "Parameter values",
x = "Simulation") +
guides(color = "none") +
theme(strip.text = element_text(hjust = 0))
reg_coverage_plot
#5) Make plot
reg_coverage_plot = reg_coverage %>%
# filter(replicate <= 100) %>%
ggplot(aes(x = replicate, y = value, color = as.factor(-contains),
shape = as.factor(contains))) +
geom_linerange(aes(ymin = .lower, ymax = .upper), linewidth = 0.62) +
facet_wrap(~name_greek, scales = "free", ncol = 1) +
geom_hline(data = . %>% distinct(name_greek, true_values),
aes(yintercept = true_values)) +
scale_color_colorblind() +
theme_default() +
labs(y = "Parameter values",
x = "Simulation") +
guides(color = "none") +
theme(strip.text = element_text(hjust = 0))
?scale_color_colorblind()
show_col(colorblind_pal()(8))
#5) Make plot
reg_coverage_plot = reg_coverage %>%
# filter(replicate <= 100) %>%
ggplot(aes(x = replicate, y = value, color = as.factor(contains),
shape = as.factor(contains))) +
geom_linerange(aes(ymin = .lower, ymax = .upper), linewidth = 0.62) +
facet_wrap(~name_greek, scales = "free", ncol = 1) +
geom_hline(data = . %>% distinct(name_greek, true_values),
aes(yintercept = true_values)) +
scale_color_manual(values = c("E69F00", "black")) +
theme_default() +
labs(y = "Parameter values",
x = "Simulation") +
guides(color = "none") +
theme(strip.text = element_text(hjust = 0))
#6) Save plot
ggview::ggview(reg_coverage_plot, height = 6.5, width = 6.5)
#5) Make plot
reg_coverage_plot = reg_coverage %>%
# filter(replicate <= 100) %>%
ggplot(aes(x = replicate, y = value, color = as.factor(contains),
shape = as.factor(contains))) +
geom_linerange(aes(ymin = .lower, ymax = .upper), linewidth = 0.62) +
facet_wrap(~name_greek, scales = "free", ncol = 1) +
geom_hline(data = . %>% distinct(name_greek, true_values),
aes(yintercept = true_values)) +
scale_color_manual(values = c("e69F00", "black")) +
theme_default() +
labs(y = "Parameter values",
x = "Simulation") +
guides(color = "none") +
theme(strip.text = element_text(hjust = 0))
#6) Save plot
ggview::ggview(reg_coverage_plot, height = 6.5, width = 6.5)
#5) Make plot
reg_coverage_plot = reg_coverage %>%
# filter(replicate <= 100) %>%
ggplot(aes(x = replicate, y = value, color = as.factor(contains),
shape = as.factor(contains))) +
geom_linerange(aes(ymin = .lower, ymax = .upper), linewidth = 0.62) +
facet_wrap(~name_greek, scales = "free", ncol = 1) +
geom_hline(data = . %>% distinct(name_greek, true_values),
aes(yintercept = true_values)) +
scale_color_manual(values = c("#ff9900", "black")) +
theme_default() +
labs(y = "Parameter values",
x = "Simulation") +
guides(color = "none") +
theme(strip.text = element_text(hjust = 0))
#6) Save plot
ggview::ggview(reg_coverage_plot, height = 6.5, width = 6.5)
#5) Make plot
reg_coverage_plot = reg_coverage %>%
# filter(replicate <= 100) %>%
ggplot(aes(x = replicate, y = value, color = as.factor(contains),
shape = as.factor(contains))) +
geom_linerange(aes(ymin = .lower, ymax = .upper), linewidth = 0.62) +
facet_wrap(~name_greek, scales = "free", ncol = 1) +
geom_hline(data = . %>% distinct(name_greek, true_values),
aes(yintercept = true_values)) +
scale_color_manual(values = c("#e69f00", "black")) +
theme_default() +
labs(y = "Parameter values",
x = "Simulation") +
guides(color = "none") +
theme(strip.text = element_text(hjust = 0))
#6) Save plot
ggview::ggview(reg_coverage_plot, height = 6.5, width = 6.5)
#5) Make plot
reg_coverage_plot = reg_coverage %>%
# filter(replicate <= 100) %>%
ggplot(aes(x = replicate, y = value, color = as.factor(contains),
shape = as.factor(contains))) +
geom_linerange(aes(ymin = .lower, ymax = .upper), linewidth = 0.62) +
facet_wrap(~name_greek, scales = "free", ncol = 1) +
geom_hline(data = . %>% distinct(name_greek, true_values),
aes(yintercept = true_values)) +
scale_color_manual(values = c("black", "#e69f00")) +
theme_default() +
labs(y = "Parameter values",
x = "Simulation") +
guides(color = "none") +
theme(strip.text = element_text(hjust = 0))
#6) Save plot
ggview::ggview(reg_coverage_plot, height = 6.5, width = 6.5)
#5) Make plot
reg_coverage_plot = reg_coverage %>%
# filter(replicate <= 100) %>%
ggplot(aes(x = replicate, y = value, color = as.factor(-contains),
shape = as.factor(contains))) +
geom_linerange(aes(ymin = .lower, ymax = .upper), linewidth = 0.62) +
facet_wrap(~name_greek, scales = "free", ncol = 1) +
geom_hline(data = . %>% distinct(name_greek, true_values),
aes(yintercept = true_values)) +
scale_color_manual(values = c("black", "#e69f00")) +
theme_default() +
labs(y = "Parameter values",
x = "Simulation") +
guides(color = "none") +
theme(strip.text = element_text(hjust = 0))
#5) Make plot
reg_coverage_plot = reg_coverage %>%
# filter(replicate <= 100) %>%
ggplot(aes(x = replicate, y = value, color = as.factor(-contains),
shape = as.factor(contains))) +
geom_linerange(aes(ymin = .lower, ymax = .upper), linewidth = 0.62) +
facet_wrap(~name_greek, scales = "free", ncol = 1) +
geom_hline(data = . %>% distinct(name_greek, true_values),
aes(yintercept = true_values)) +
scale_color_manual(values = c("#e69f00", "black")) +
theme_default() +
labs(y = "Parameter values",
x = "Simulation") +
guides(color = "none") +
theme(strip.text = element_text(hjust = 0))
#5) Make plot
reg_coverage_plot = reg_coverage %>%
# filter(replicate <= 100) %>%
ggplot(aes(x = replicate, y = value, color = as.factor(-contains),
shape = as.factor(contains))) +
geom_linerange(aes(ymin = .lower, ymax = .upper), linewidth = 0.62) +
facet_wrap(~name_greek, scales = "free", ncol = 1) +
geom_hline(data = . %>% distinct(name_greek, true_values),
aes(yintercept = true_values)) +
scale_color_colorblind() +
theme_default() +
labs(y = "Parameter values",
x = "Simulation") +
guides(color = "none") +
theme(strip.text = element_text(hjust = 0))
#6) Save plot
ggview::ggview(reg_coverage_plot, height = 6.5, width = 6.5)
save_plot_and_data(reg_coverage_plot, file_name = "plots/reg_coverage_plot",  height = 6.5, width = 6.5)
#5) Make plot
reg_coverage_plot = reg_coverage %>%
# filter(replicate <= 100) %>%
ggplot(aes(x = replicate, y = value, color = as.factor(contains),
shape = as.factor(contains))) +
geom_linerange(aes(ymin = .lower, ymax = .upper), linewidth = 0.62) +
facet_wrap(~name_greek, scales = "free", ncol = 1) +
geom_hline(data = . %>% distinct(name_greek, true_values),
aes(yintercept = true_values)) +
scale_color_colorblind() +
theme_default() +
labs(y = "Parameter values",
x = "Simulation") +
guides(color = "none") +
theme(strip.text = element_text(hjust = 0))
#6) Save plot
ggview::ggview(reg_coverage_plot, height = 6.5, width = 6.5)
save_plot_and_data(reg_coverage_plot, file_name = "plots/reg_coverage_plot",  height = 6.5, width = 6.5)
